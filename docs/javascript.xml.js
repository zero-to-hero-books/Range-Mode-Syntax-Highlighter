RMSH.addSyntaxXML("javascript", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<syntaxDefinition name=\"javascript\" extensions=\"js\" caseSensitive=\"true\"><delimiters>+-/%*|^?:&amp;!=&lt;&gt;\"'\\{}[]()~`;$.</delimiters><range id=\"defaultJS\" default=\"true\"><symbols color=\"#0000ff\">super constructor arguments debugger export import as break case catch const continue default delete do each else finally for function get if of in instanceof let new return set switch this throw try typeof var void while with yield class extends static async await</symbols><symbols color=\"#0000ff\" italic=\"true\">false Infinity NaN null true undefined</symbols><symbols color=\"#ee3333\">\" ' `</symbols><symbols color=\"#00bb00\">/* */ //</symbols><fold id=\"braces\"><begin>{</begin><end>}</end></fold><embed range=\"quoteDouble\"><begin>\"</begin><end>\"</end><end value=\"EOL\"/></embed><embed range=\"quoteSingle\"><begin>'</begin><end>'</end><end value=\"EOL\"/></embed><embed range=\"quoteBacktick\"><begin>`</begin><end>`</end></embed><embed range=\"comment\" fold=\"true\"><begin>/*</begin><end>*/</end></embed><embed range=\"singleLineComment\"><begin>//</begin><end value=\"EOL\"/></embed></range><range id=\"quoteDouble\" color=\"#ee3333\"><symbols>\\\" \\\\</symbols></range><range id=\"quoteSingle\" color=\"#ee3333\"><symbols>\\' \\\\</symbols></range><range id=\"quoteBacktick\" color=\"#ee3333\"><symbols>\\` \\\\</symbols><embed range=\"defaultJS\"><begin>${</begin><end>}</end></embed></range><range id=\"comment\" color=\"#00bb00\"/><range id=\"singleLineComment\" color=\"#00bb00\"/></syntaxDefinition>");